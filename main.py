import json
import random
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes, MessageHandler, filters

# –¢–µ–∫ –µ–∫—ñ –∞–¥–º–∏–Ω–Ω—ñ“£ ID-–ª–µ—Ä—ñ
ADMINS = [7186196783, 7335365453]  # –ú“±–Ω–¥–∞ ”©–∑ –∞–¥–º–∏–Ω ID-–ª–µ—Ä—ñ“£—ñ–∑–¥—ñ “õ–æ–π—ã“£—ã–∑

# –ü–∞–π–¥–∞–ª–∞–Ω—É—à—ã–ª–∞—Ä –º”ô–ª—ñ–º–µ—Ç—Ç–µ—Ä—ñ —Å–∞“õ—Ç–∞–ª–∞—Ç—ã–Ω —Ñ–∞–π–ª
DATA_FILE = "data.json"

# –î–µ—Ä–µ–∫—Ç–µ—Ä–¥—ñ –æ“õ—É/–∂–∞–∑—É —Ñ—É–Ω–∫—Ü–∏—è–ª–∞—Ä—ã
def load_data():
    try:
        with open(DATA_FILE, "r", encoding="utf-8") as f:
            return json.load(f)
    except:
        return {}

def save_data(data):
    with open(DATA_FILE, "w", encoding="utf-8") as f:
        json.dump(data, f, indent=4, ensure_ascii=False)

# –ü–∞–π–¥–∞–ª–∞–Ω—É—à—ã–Ω—ã –¥–µ—Ä–µ–∫—Ç–µ—Ä–≥–µ “õ–æ—Å—É
def add_user(user_id, username):
    data = load_data()
    if str(user_id) not in data:
        data[str(user_id)] = {
            "username": username,
            "balance": 500_000,
            "wins": 0,
            "losses": 0,
            "sent": 0,
            "received": 0,
            "clan": "None",
            "level": 1
        }
        save_data(data)

# /profile –∫–æ–º–∞–Ω–¥–∞—Å—ã
async def profile(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.message.from_user
    # –ï–≥–µ—Ä –æ—Ç–≤–µ—Ç –±–æ–ª—Å–∞
    if update.message.reply_to_message:
        user = update.message.reply_to_message.from_user
    add_user(user.id, user.username or user.first_name)
    data = load_data()[str(user.id)]
    text = f"""üë§–ü—Ä–æ—Ñ–∏–ª—å: {data['username']} 
‚öôÔ∏èID: {user.id}
 ‚îú –ê“õ—à–∞üí∞: {data['balance']}
 ‚îú “∞—Ç“õ–∞–Ω–¥–∞—Ä—ã‚úÖ: {data['wins']}
 ‚îú –ñ–µ–Ω—ñ–ª–≥–µ–Ω–¥–µ—Ä—ñüõë: {data['losses']}
 ‚îú –ñ—ñ–±–µ—Ä—ñ–ª–≥–µ–Ω —Å—É–º–º–∞—Å—ãüí∏: {data['sent']}
 ‚îú –ê–ª—ã–Ω“ì–∞–Ω —Å—É–º–º–∞—Å—ãüíµ: {data['received']}
 ‚îú –ö–ª–∞–Ω‚öîÔ∏è: {data['clan']}
 ‚îú –î”ô—Ä–µ–∂–µüìà: {data['level']}"""
    await update.message.reply_text(text)

# /givemoney –∫–æ–º–∞–Ω–¥–∞—Å—ã (–ø–∞–π–¥–∞–ª–∞–Ω—É—à—ã–ª–∞—Ä –±—ñ—Ä –±—ñ—Ä—ñ–Ω–µ –∞“õ—à–∞ –∂—ñ–±–µ—Ä–µ–¥—ñ)
async def givemoney(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        sender = update.message.from_user
        add_user(sender.id, sender.username or sender.first_name)
        data = load_data()
        if len(context.args) < 2:
            await update.message.reply_text("“ö–æ–ª–¥–∞–Ω—É: /givemoney <user_id> <—Å–æ–º–∞>")
            return
        target_id = str(context.args[0])
        amount = int(context.args[1])
        if target_id not in data:
            await update.message.reply_text("–ü–∞–π–¥–∞–ª–∞–Ω—É—à—ã –∂–æ“õ!")
            return
        if data[str(sender.id)]["balance"] < amount:
            await update.message.reply_text("–°—ñ–∑–¥–µ –∂–µ—Ç–∫—ñ–ª—ñ–∫—Ç—ñ –∞“õ—à–∞ –∂–æ“õ!")
            return
        data[str(sender.id)]["balance"] -= amount
        data[str(sender.id)]["sent"] += amount
        data[target_id]["balance"] += amount
        data[target_id]["received"] += amount
        save_data(data)
        await update.message.reply_text(f"{amount}—Ç–≥ {data[target_id]['username']} “õ–æ–ª–¥–∞–Ω—É—à—ã—Å—ã–Ω–∞ –∂—ñ–±–µ—Ä—ñ–ª–¥—ñ.")
    except:
        await update.message.reply_text("“ö–∞—Ç–µ!")

# /gmoney –∫–æ–º–∞–Ω–¥–∞—Å—ã (—Ç–µ–∫ –∞–¥–º–∏–Ω–¥–µ—Ä “õ–æ–ª–¥–∞–Ω–∞–¥—ã)
async def gmoney(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.message.from_user
    if user.id not in ADMINS:
        await update.message.reply_text("–°—ñ–∑ –∞–¥–º–∏–Ω –µ–º–µ—Å—Å—ñ–∑!")
        return
    if len(context.args) < 2:
        await update.message.reply_text("“ö–æ–ª–¥–∞–Ω—É: /gmoney <user_id> <—Å–æ–º–∞>")
        return
    data = load_data()
    target_id = str(context.args[0])
    amount = int(context.args[1])
    if target_id not in data:
        add_user(target_id, f"User{target_id}")
    data[target_id]["balance"] += amount
    save_data(data)
    await update.message.reply_text(f"{amount}—Ç–≥ {data[target_id]['username']} “õ–æ–ª–¥–∞–Ω—É—à—ã—Å—ã–Ω–∞ –±–µ—Ä—ñ–ª–¥—ñ.")

# /delmoney –∫–æ–º–∞–Ω–¥–∞—Å—ã (—Ç–µ–∫ –∞–¥–º–∏–Ω–¥–µ—Ä)
async def delmoney(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.message.from_user
    if user.id not in ADMINS:
        await update.message.reply_text("–°—ñ–∑ –∞–¥–º–∏–Ω –µ–º–µ—Å—Å—ñ–∑!")
        return
    if len(context.args) < 1:
        await update.message.reply_text("“ö–æ–ª–¥–∞–Ω—É: /delmoney <user_id>")
        return
    target_id = str(context.args[0])
    data = load_data()
    if target_id not in data:
        await update.message.reply_text("–ü–∞–π–¥–∞–ª–∞–Ω—É—à—ã –∂–æ“õ!")
        return
    data[target_id]["balance"] = 0
    save_data(data)
    await update.message.reply_text(f"{data[target_id]['username']} “õ–æ–ª–¥–∞–Ω—É—à—ã—Å—ã–Ω—ã“£ –∞“õ—à–∞—Å—ã –∂–æ–π—ã–ª–¥—ã.")

# /balance –∫–æ–º–∞–Ω–¥–∞—Å—ã
async def balance(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.message.from_user
    add_user(user.id, user.username or user.first_name)
    data = load_data()[str(user.id)]
    await update.message.reply_text(f"–°—ñ–∑–¥—ñ“£ –±–∞–ª–∞–Ω—Å—ã“£—ã–∑: {data['balance']}—Ç–≥")

# –ö–∞–∑–∏–Ω–æ –æ–π—ã–Ω–¥–∞—Ä—ã
async def play(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.message.from_user
    add_user(user.id, user.username or user.first_name)
    data = load_data()
    if len(context.args) < 2:
        await update.message.reply_text("“ö–æ–ª–¥–∞–Ω—É: /play <–±–∞—Å–∫–µ—Ç–±–æ–ª/—Ñ—É—Ç–±–æ–ª/—Ä—É–ª–µ—Ç–∫–∞/–¥–∞—Ä—Ç—Å/–±–æ—É–ª–∏–Ω–≥> <—Å–æ–º–∞>")
        return
    game = context.args[0].lower()
    amount = int(context.args[1])
    if data[str(user.id)]["balance"] < amount:
        await update.message.reply_text("–°—ñ–∑–¥–µ –∂–µ—Ç–∫—ñ–ª—ñ–∫—Ç—ñ –∞“õ—à–∞ –∂–æ“õ!")
        return
    win = random.choice([True, False])
    if win:
        data[str(user.id)]["balance"] += amount
        data[str(user.id)]["wins"] += 1
        msg = f"–°—ñ–∑ {game} –æ–π—ã–Ω—ã–Ω–¥–∞ “±—Ç—Ç—ã“£—ã–∑! +{amount}—Ç–≥"
    else:
        data[str(user.id)]["balance"] -= amount
        data[str(user.id)]["losses"] += 1
        msg = f"–°—ñ–∑ {game} –æ–π—ã–Ω—ã–Ω–¥–∞ –∂–µ“£—ñ–ª–¥—ñ“£—ñ–∑! -{amount}—Ç–≥"
    save_data(data)
    await update.message.reply_text(msg)

# –≠—Ä–æ—Ç–∏–∫–∞–ª—ã“õ –∫–æ–º–∞–Ω–¥–∞–ª–∞—Ä
async def erotic_action(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.message.from_user
    add_user(user.id, user.username or user.first_name)
    if not update.message.reply_to_message:
        await update.message.reply_text("–ö—ñ–º–≥–µ “õ–æ–ª–¥–∞–Ω–∞—Ç—ã–Ω—ã“£—ã–∑–¥—ã –±–µ–ª–≥—ñ–ª–µ“£—ñ–∑ (–æ—Ç–≤–µ—Ç—å)")
        return
    target = update.message.reply_to_message.from_user
    action = update.message.text.lower()
    text_map = {
        "—Ç—Ä–∞—Ö–Ω—É—Ç—å": f"b. –∂—ë—Å–∫–æ –∞—Ç—Ç—Ä–∞—Ö–∞–ª(-–∞) {target.username} /// ME ü•∞ü•µ",
        "–≤—ã–µ–±–∞—Ç—å": f"b. —Ç—Ä–∞—Ö–Ω—É–ª(-–∞) {target.username} /// ME ü•∞ü•µ",
        "—Å–µ–∫—Å": f"b. –æ—Ç—å–µ–±–∞–ª(-–∞) –≤–æ –≤—Å–µ –¥—ã—Ä–æ—á–∫–∏ {target.username} /// MEü•∞ü•µ",
        "–ø–Ω—É—Ç—å": f"b. –ø–Ω—É–ª(-–∞) {target.username} /// ME ü•µ"
    }
    if action in text_map:
        await update.message.reply_text(text_map[action])

# /help –∫–æ–º–∞–Ω–¥–∞—Å—ã
async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = """/profile - –ü—Ä–æ—Ñ–∏–ª—å –∫”©—Ä—Å–µ—Ç—É
/balance - –ë–∞–ª–∞–Ω—Å —Ç–µ–∫—Å–µ—Ä—É
/givemoney <id> <—Å–æ–º–∞> - –ë—ñ—Ä “õ–æ–ª–¥–∞–Ω—É—à—ã“ì–∞ –∞“õ—à–∞ –∂—ñ–±–µ—Ä—É
/gmoney <id> <—Å–æ–º–∞> - –ê–¥–º–∏–Ω –∞“õ—à–∞ –±–µ—Ä—É
/delmoney <id> - –ê–¥–º–∏–Ω –∞“õ—à–∞ –∂–æ—é
/play <–æ–π—ã–Ω> <—Å–æ–º–∞> - –ö–∞–∑–∏–Ω–æ –æ–π–Ω–∞—É
–≠—Ä–æ—Ç–∏–∫–∞–ª—ã“õ: —Ç—Ä–∞—Ö–Ω—É—Ç—å, –≤—ã–µ–±–∞—Ç—å, —Å–µ–∫—Å, –ø–Ω—É—Ç—å (–æ—Ç–≤–µ—Ç—å –∞—Ä“õ—ã–ª—ã)"""
    await update.message.reply_text(text)

# –ë–æ—Ç—Ç—ã —ñ—Å–∫–µ “õ–æ—Å—É
app = ApplicationBuilder().token("–í–ê–®_BOT_TOKEN").build()  # –ú“±–Ω–¥–∞ Replit/Render Secrets “õ–æ–ª–¥–∞–Ω—Å–∞“£—ã–∑ –±–æ–ª–∞–¥—ã

# –ö–æ–º–∞–Ω–¥–∞–ª–∞—Ä–¥—ã —Ç—ñ—Ä–∫–µ—É
app.add_handler(CommandHandler("profile", profile))
app.add_handler(CommandHandler("balance", balance))
app.add_handler(CommandHandler("givemoney", givemoney))
app.add_handler(CommandHandler("gmoney", gmoney))
app.add_handler(CommandHandler("delmoney", delmoney))
app.add_handler(CommandHandler("play", play))
app.add_handler(CommandHandler("help", help_command))
# –≠—Ä–æ—Ç–∏–∫–∞–ª—ã“õ –∫–æ–º–∞–Ω–¥–∞–ª–∞—Ä
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, erotic_action))

# –ë–æ—Ç—Ç—ã —ñ—Å–∫–µ “õ–æ—Å—É
app.run_polling()
